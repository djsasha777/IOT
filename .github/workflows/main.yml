
name: myiotimage

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
        - name: Get current time of build
          uses: gerred/actions/current-time@master
          id: start-time
        - name: Checkout
          uses: actions/checkout@v2     
        - name: Login to github registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Generate build number
          id: buildnumber
          uses: einaregilsson/build-number@v3
          with:
            token: ${{secrets.github_token}} 
        - name : build docker image and push
          uses: docker/build-push-action@v3
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: |
              ghcr.io/${{ github.repository }}/${{ github.workflow }}:${{ steps.buildnumber.outputs.build_number }}             
        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
        - name: Build and push to Dockerhub
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            tags: djsasha777/${{ github.workflow }}:${{ steps.buildnumber.outputs.build_number }}

        - name: Send notification
          uses: dawidd6/action-send-mail@v2
          with:
            server_address: smtp.gmail.com
            server_port: 465
            username: ${{ secrets.EMAIL_USERNAME }}
            password: ${{ secrets.EMAIL_PASSWORD }}
            subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            to: ${{ secrets.EMAILOFUSER }}
            from: ${{ secrets.EMAIL_USERNAME }}

  proviseandrun:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [build]
    steps:
        - name: Install packages to ec2
          uses: tomasnorre/ansible-cli-action@0.0.5
          with:
            command: "ansible-playbook run_provisioning.yml"
        - name: run app in docker-compose in ec2
          uses: tomasnorre/ansible-cli-action@0.0.5
          with:
            command: "run_docker_compose_file.yml"